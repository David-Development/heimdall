worker_processes  1;  ## Default: 1
error_log  /var/log/nginx/error.log;
pid        /var/log/nginx/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  1024;  ## Default: 1024
}


http {
  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   /var/log/nginx/access.log  main;
  sendfile     on;
  tcp_nopush   on;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts


    upstream heimdall_frontend {
        server heimdall-frontend:3000;
    }

    upstream heimdall_backend {
        server heimdall-backend:5000;
    }


  server { # simple reverse-proxy
    listen       80;
    #server_name  dns.name.com;
    charset UTF-8;

    location / {
        proxy_pass http://heimdall_frontend; # for frontend server
        #root   /usr/share/nginx/html; # for direct production hosting
        #try_files $uri$args $uri$args/ /index.html;
        
        #expires -1;
        #add_header  Pragma "no-cache";
        #add_header  Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
        
        proxy_read_timeout       3500;
        proxy_connect_timeout    3250;
    }

    location /sockjs-node/ {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_pass http://heimdall_frontend;
    }

    location /api/ {
        proxy_pass http://heimdall_backend/api/;
        proxy_read_timeout       3500;
        proxy_connect_timeout    3250;
    }
  }
}

stream {
    upstream mqtt_broker {
        server mqtt-broker:8083;
    }

    # MQTT WebSockets
    server {
        listen 8083;
        proxy_pass mqtt_broker; # The server you want to redirect to
    }
}